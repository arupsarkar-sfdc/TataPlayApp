#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef PERSONALIZATION_SWIFT_H
#define PERSONALIZATION_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import SFMCSDK;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Personalization",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

/// Optional context for <code>DecisionsRequest</code>.  Use <code>DecisionsRequestContextBuilder</code> to construct.
SWIFT_CLASS_NAMED("DecisionsRequestContext")
@interface SFPDecisionsRequestContext : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anchorId;
@property (nonatomic, readonly, copy) NSString * _Nullable anchorDmoName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull contextualAttributes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("Use the Builder to create an instance.");
@end

@class NSDate;

/// Used to construct <code>DecisionsRequestContext</code>
SWIFT_CLASS_NAMED("DecisionsRequestContextBuilder")
@interface SFPDecisionsRequestContextBuilder : NSObject
- (SFPDecisionsRequestContextBuilder * _Nonnull)anchorId:(NSString * _Nullable)aId SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)anchorDmoName:(NSString * _Nullable)aDmoName SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name string:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name int:(NSInteger)int_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name double:(double)double_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name float:(float)float_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name date:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name bool:(BOOL)bool_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContext * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SFPDecisionsResponsePersonalization;

/// The response for a successful<code>fetchDecisions</code> call
SWIFT_CLASS_NAMED("DecisionsResponse")
@interface SFPDecisionsResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable requestId;
/// The personalizations for each personalization point name specified in the request.
@property (nonatomic, readonly, copy) NSArray<SFPDecisionsResponsePersonalization *> * _Nonnull personalizations;
/// The raw JSON from which this class was initialized from. Can be useful for logging etc.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Each ‘data’ within a <code>DecisionsResponsePersonalization</code>’s <code>data</code>
SWIFT_CLASS_NAMED("DecisionsResponseContentObject")
@interface SFPDecisionsResponseContentObject : NSObject
/// The raw JSON from which this class was initialized from. Can be useful for logging etc.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Each ‘personalization’ within a <code>DecisionsResponse</code>’s <code>personalizations</code>
SWIFT_CLASS_NAMED("DecisionsResponsePersonalization")
@interface SFPDecisionsResponsePersonalization : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull personalizationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull personalizationPointId;
@property (nonatomic, readonly, copy) NSString * _Nonnull personalizationPointName;
@property (nonatomic, readonly, copy) NSArray<SFPDecisionsResponseContentObject *> * _Nonnull data;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// The raw JSON from which this class was initialized from. Can be useful for logging etc.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This is a Personalization Config class used by the
/// <a href="x-source-tag://PersonalizationConfigBuilder">PersonalizationConfigBuilder</a>
SWIFT_CLASS_NAMED("PersonalizationConfig")
@interface SFPersonalizationConfig : NSObject <SFMCSdkModuleConfig>
@property (nonatomic, readonly) enum SFMCSdkModuleName name;
@property (nonatomic, readonly, copy) NSString * _Nonnull appId;
/// Personalization does not currently use this, but it’s presence is required by SFMC ModuleConfig
@property (nonatomic, readonly) BOOL trackScreens;
/// Optional dataspace to use, otherwise uses default dataspace
@property (nonatomic, readonly, copy) NSString * _Nullable dataspace;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("Use the Builder to create an instance.");
@end


/// This class is a Personalization Config Builder helper.
SWIFT_CLASS_NAMED("PersonalizationConfigBuilder")
@interface SFPersonalizationConfigBuilder : NSObject
/// Optional dataspace to use, otherwise uses the default dataspace
- (SFPersonalizationConfigBuilder * _Nonnull)dataspace:(NSString * _Nullable)dspace SWIFT_WARN_UNUSED_RESULT;
/// Builds configuration.
///
/// returns:
/// PersonalizationConfig
- (SFPersonalizationConfig * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SFPersonalizationError, "PersonalizationError", open) {
  SFPersonalizationErrorInitialization = 1,
  SFPersonalizationErrorCdpModule = 2,
  SFPersonalizationErrorConsent = 3,
  SFPersonalizationErrorRequestInvalid = 4,
  SFPersonalizationErrorError = 5,
  SFPersonalizationErrorResponseInvalid = 6,
};
static NSString * _Nonnull const SFPersonalizationErrorDomain = @"Personalization.PersonalizationError";

@class SFMCSdkComponents;

/// This class provides Personalization Software Development Kit feature access and integration point.
SWIFT_CLASS_NAMED("PersonalizationModule")
@interface SFPersonalizationModule : NSObject <SFMCModule>
/// Module name
@property (nonatomic, readonly) enum SFMCSdkModuleName name;
/// PersonalizationModule configuration
@property (nonatomic, readonly, strong) SFPersonalizationConfig * _Nullable config;
/// Version of the module
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull moduleVersion;)
+ (NSString * _Nonnull)moduleVersion SWIFT_WARN_UNUSED_RESULT;
/// Module state properties
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSDictionary<NSString *, NSString *> * _Nullable stateProperties;)
+ (NSDictionary<NSString *, NSString *> * _Nullable)stateProperties SWIFT_WARN_UNUSED_RESULT;
+ (void)setStateProperties:(NSDictionary<NSString *, NSString *> * _Nullable)props;
/// Shared PersonalizationModule Instance
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SFPersonalizationModule * _Nonnull shared;)
+ (SFPersonalizationModule * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (id <SFMCModule> _Nullable)initModuleWithConfig:(id <SFMCSdkModuleConfig> _Nonnull)config components:(SFMCSdkComponents * _Nonnull)components SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// The SDK internal initializer.
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// For direct/manual fetching of persionalization/decisions
- (void)fetchDecisionsWithPersonalizationPointNames:(NSArray<NSString *> * _Nonnull)personalizationPointNames context:(SFPDecisionsRequestContext * _Nullable)context completionHandler:(void (^ _Nonnull)(SFPDecisionsResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef PERSONALIZATION_SWIFT_H
#define PERSONALIZATION_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import SFMCSDK;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="Personalization",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;

/// Optional context for <code>DecisionsRequest</code>.  Use <code>DecisionsRequestContextBuilder</code> to construct.
SWIFT_CLASS_NAMED("DecisionsRequestContext")
@interface SFPDecisionsRequestContext : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable anchorId;
@property (nonatomic, readonly, copy) NSString * _Nullable anchorDmoName;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull contextualAttributes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("Use the Builder to create an instance.");
@end

@class NSDate;

/// Used to construct <code>DecisionsRequestContext</code>
SWIFT_CLASS_NAMED("DecisionsRequestContextBuilder")
@interface SFPDecisionsRequestContextBuilder : NSObject
- (SFPDecisionsRequestContextBuilder * _Nonnull)anchorId:(NSString * _Nullable)aId SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)anchorDmoName:(NSString * _Nullable)aDmoName SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name string:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name int:(NSInteger)int_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name double:(double)double_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name float:(float)float_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name date:(NSDate * _Nonnull)date SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContextBuilder * _Nonnull)contextualAttributeWithName:(NSString * _Nonnull)name bool:(BOOL)bool_ SWIFT_WARN_UNUSED_RESULT;
- (SFPDecisionsRequestContext * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class SFPDecisionsResponsePersonalization;

/// The response for a successful<code>fetchDecisions</code> call
SWIFT_CLASS_NAMED("DecisionsResponse")
@interface SFPDecisionsResponse : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable requestId;
/// The personalizations for each personalization point name specified in the request.
@property (nonatomic, readonly, copy) NSArray<SFPDecisionsResponsePersonalization *> * _Nonnull personalizations;
/// The raw JSON from which this class was initialized from. Can be useful for logging etc.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Each ‘data’ within a <code>DecisionsResponsePersonalization</code>’s <code>data</code>
SWIFT_CLASS_NAMED("DecisionsResponseContentObject")
@interface SFPDecisionsResponseContentObject : NSObject
/// The raw JSON from which this class was initialized from. Can be useful for logging etc.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Each ‘personalization’ within a <code>DecisionsResponse</code>’s <code>personalizations</code>
SWIFT_CLASS_NAMED("DecisionsResponsePersonalization")
@interface SFPDecisionsResponsePersonalization : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull personalizationId;
@property (nonatomic, readonly, copy) NSString * _Nonnull personalizationPointId;
@property (nonatomic, readonly, copy) NSString * _Nonnull personalizationPointName;
@property (nonatomic, readonly, copy) NSArray<SFPDecisionsResponseContentObject *> * _Nonnull data;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull attributes;
/// The raw JSON from which this class was initialized from. Can be useful for logging etc.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull rawJson;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// This is a Personalization Config class used by the
/// <a href="x-source-tag://PersonalizationConfigBuilder">PersonalizationConfigBuilder</a>
SWIFT_CLASS_NAMED("PersonalizationConfig")
@interface SFPersonalizationConfig : NSObject <SFMCSdkModuleConfig>
@property (nonatomic, readonly) enum SFMCSdkModuleName name;
@property (nonatomic, readonly, copy) NSString * _Nonnull appId;
/// Personalization does not currently use this, but it’s presence is required by SFMC ModuleConfig
@property (nonatomic, readonly) BOOL trackScreens;
/// Optional dataspace to use, otherwise uses default dataspace
@property (nonatomic, readonly, copy) NSString * _Nullable dataspace;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE_MSG("Use the Builder to create an instance.");
@end


/// This class is a Personalization Config Builder helper.
SWIFT_CLASS_NAMED("PersonalizationConfigBuilder")
@interface SFPersonalizationConfigBuilder : NSObject
/// Optional dataspace to use, otherwise uses the default dataspace
- (SFPersonalizationConfigBuilder * _Nonnull)dataspace:(NSString * _Nullable)dspace SWIFT_WARN_UNUSED_RESULT;
/// Builds configuration.
///
/// returns:
/// PersonalizationConfig
- (SFPersonalizationConfig * _Nonnull)build SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM_NAMED(NSInteger, SFPersonalizationError, "PersonalizationError", open) {
  SFPersonalizationErrorInitialization = 1,
  SFPersonalizationErrorCdpModule = 2,
  SFPersonalizationErrorConsent = 3,
  SFPersonalizationErrorRequestInvalid = 4,
  SFPersonalizationErrorError = 5,
  SFPersonalizationErrorResponseInvalid = 6,
};
static NSString * _Nonnull const SFPersonalizationErrorDomain = @"Personalization.PersonalizationError";

@class SFMCSdkComponents;

/// This class provides Personalization Software Development Kit feature access and integration point.
SWIFT_CLASS_NAMED("PersonalizationModule")
@interface SFPersonalizationModule : NSObject <SFMCModule>
/// Module name
@property (nonatomic, readonly) enum SFMCSdkModuleName name;
/// PersonalizationModule configuration
@property (nonatomic, readonly, strong) SFPersonalizationConfig * _Nullable config;
/// Version of the module
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull moduleVersion;)
+ (NSString * _Nonnull)moduleVersion SWIFT_WARN_UNUSED_RESULT;
/// Module state properties
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSDictionary<NSString *, NSString *> * _Nullable stateProperties;)
+ (NSDictionary<NSString *, NSString *> * _Nullable)stateProperties SWIFT_WARN_UNUSED_RESULT;
+ (void)setStateProperties:(NSDictionary<NSString *, NSString *> * _Nullable)props;
/// Shared PersonalizationModule Instance
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) SFPersonalizationModule * _Nonnull shared;)
+ (SFPersonalizationModule * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
+ (id <SFMCModule> _Nullable)initModuleWithConfig:(id <SFMCSdkModuleConfig> _Nonnull)config components:(SFMCSdkComponents * _Nonnull)components SWIFT_METHOD_FAMILY(none) SWIFT_WARN_UNUSED_RESULT;
/// The SDK internal initializer.
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// For direct/manual fetching of persionalization/decisions
- (void)fetchDecisionsWithPersonalizationPointNames:(NSArray<NSString *> * _Nonnull)personalizationPointNames context:(SFPDecisionsRequestContext * _Nullable)context completionHandler:(void (^ _Nonnull)(SFPDecisionsResponse * _Nullable, NSError * _Nullable))completionHandler;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
